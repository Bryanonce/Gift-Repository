{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","tittle","title","images","downsized_medium","GiftGridItem","className","src","alt","GriftGrid","loading","state","setState","useEffect","setTimeout","then","useFetchGifs","console","log","GiftExpertApp","ReactDOM","render","document","querySelector"],"mappings":"2MAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAe1C,OAAO,sBAAMC,SARQ,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAKP,EAAWK,QAAhB,mBAA0BE,OAClDN,EAAc,MAIf,SACH,uBACIO,KAAK,OACLC,YAAY,WACZC,MAAOV,EACPW,SAhBkB,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,yFAC2EC,UAAUH,GADrF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAACC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,OAAQF,EAAIG,MACZX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QARvB,kBAWZM,GAXY,4CAAH,sDCEPQ,EAAe,SAAC,GAAS,IAARN,EAAO,EAAPA,IAE1B,OACI,sBAAKO,UAAU,iCAAf,UACI,qBAAKC,IAAKR,EAAIR,IAAKiB,IAAKT,EAAIE,SAC5B,4BAAIF,EAAIE,aCEPQ,EAAY,SAAC,GAAc,IAAbpB,EAAY,EAAZA,SAAY,ECNX,SAACA,GAAY,IAAD,EACXf,mBAAS,CAC9BsB,KAAM,GACNc,SAAS,IAHuB,mBAC7BC,EAD6B,KACvBC,EADuB,KAmBpC,OAbAC,qBAAU,WACNC,YAAW,WACP1B,EAAQC,GACP0B,MAAK,SAAChB,GACHa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAGlB,OAEL,CAACrB,IAEIsB,EDZuBK,CAAa3B,GAA/Bc,EADuB,EAC5BP,KAAYc,EADgB,EAChBA,QAGnB,OAFAO,QAAQC,IAAIR,GAEL,qCACP,6BAAKrB,IAEJqB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SAEYH,EAAOL,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,CAEHA,IAAKA,GADAA,EAAIC,aEhBpBmB,EAAgB,WAAM,MAEK7C,mBAAS,CAAC,cAFf,mBAExBQ,EAFwB,KAEZT,EAFY,KAM/B,OAAO,qCACH,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWgB,KAAI,SAACT,GACZ,OAAO,cAAC,EAAD,CAA0BA,SAAUA,GAApBA,YCV3C+B,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,cAAc,Y","file":"static/js/main.1a640f8a.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories})=>{\r\n    //variable\r\n    const [inputValue, setInputValue] = useState('');\r\n    //funcion handle\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handlesubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(categories => [inputValue.trim(),...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    //return\r\n    return <form onSubmit={handlesubmit}>\r\n        <input \r\n            type=\"text\" \r\n            placeholder=\"Escribir\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n        />\r\n    </form>\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=9Vvbt7fq8FPiMJCMtQRHz0L0QGiJd5Qs&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map((img)=>{\r\n        return {\r\n            id: img.id,\r\n            tittle: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GiftGridItem = ({img})=>{\r\n    //console.log(img)\r\n    return (\r\n        <div className=\"card animate__bounceInRight 2s\">\r\n            <img src={img.url} alt={img.tittle}></img>\r\n            <p>{img.tittle}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n//Custom Hooks\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\n//Importar components\r\nimport {GiftGridItem} from './GiftGridItem';\r\n\r\n\r\nexport const GriftGrid = ({category})=>{\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n    return <>\r\n    <h3>{category}</h3>\r\n\r\n    {loading && <p>Loading...</p>}\r\n\r\n    <div className=\"card-grid\">\r\n            {\r\n                images.map((img)=>{\r\n                    return <GiftGridItem \r\n                        key={img.id}\r\n                        img={img}\r\n                    />\r\n                })\r\n            }\r\n    </div>\r\n    </>\r\n}","import {useState,useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state,setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n            getGifs(category)\r\n            .then((img)=>{\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n            })\r\n        }, 2000);\r\n        \r\n    },[category]);\r\n\r\n    return state;\r\n}","//Import React Library\r\nimport React, { useState } from 'react';\r\n//import Components\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GriftGrid} from './components/GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n    //variable de dato\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    //funcion handleAdd\r\n\r\n    //return\r\n    return <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr />\r\n        <ol>\r\n            {\r\n                categories.map((category) => {\r\n                    return <GriftGrid key={category} category={category}/>\r\n                })\r\n            }\r\n        </ol>\r\n    </>\r\n}","//React Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//Styles Imports\nimport './index.css';\n//Components Imports\nimport {GiftExpertApp} from './GiftExpertApp';\n\n\nReactDOM.render(<GiftExpertApp />,\n  document.querySelector('#root'));"],"sourceRoot":""}